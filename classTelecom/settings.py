"""
Django settings for classTelecom project.

Generated by 'django-admin startproject' using Django 5.2.5.
"""

from pathlib import Path
from decouple import config, Csv
import dj_database_url
import django_mongodb_backend

BASE_DIR = Path(__file__).resolve().parent.parent

# üîë Secret & Debug
SECRET_KEY = config("SECRET_KEY")
DEBUG = config("DEBUG", default=False, cast=bool)

# üîí Allowed hosts
ALLOWED_HOSTS = config("ALLOWED_HOSTS", default="http://127.0.0.1:8000", cast=Csv())

# üåê CSRF trusted origins
CSRF_TRUSTED_ORIGINS = config(
    "CSRF_TRUSTED_ORIGINS",
    default="http://127.0.0.1:8000",
    cast=Csv()
)

# Application definition
INSTALLED_APPS = [
    'jazzmin',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sitemaps',
    'ecommerce.apps.EcommerceConfig',
    'stock.apps.StockConfig',
    'facture.apps.FactureConfig',
    'accounts.apps.AccountsConfig',
    'ai_assistant.apps.AiAssistantConfig',
    'core.apps.CoreConfig',
    'widget_tweaks',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'classTelecom.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'ecommerce.context_processors.cart',
                'ecommerce.context_processors.site_config',
            ],
        },
    },
]

WSGI_APPLICATION = 'classTelecom.wsgi.application'


# üì¶ Database
USE_SQLITE = config("USE_SQLITE", default=True, cast=bool)

if USE_SQLITE:
    DATABASES = {
        "default": {
            "ENGINE": "django.db.backends.sqlite3",
            "NAME": BASE_DIR / "db.sqlite3",
        }
    }
else:
    DATABASES = {
        "default": dj_database_url.parse(
            config("DATABASE_URL")
        )
    }

# üîê Password validation
AUTH_PASSWORD_VALIDATORS = [
    {"NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator"},
    {"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator"},
    {"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator"},
    {"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator"},
]

# üåç Internationalization
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True

# üìÇ Static & Media
STATIC_URL = 'static/'
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'
STATICFILES_DIRS = [
    BASE_DIR / "static",
]

# üîë Default primary key field type
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
AUTH_USER_MODEL = 'stock.CustomUser'

# üìß Email
# --- CONFIGURATION EMAIL ---
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = config('EMAIL_HOST')
EMAIL_PORT = int(config('EMAIL_PORT', 587)) # int() pour convertir la cha√Æne en nombre
EMAIL_USE_TLS = config('EMAIL_USE_TLS') == 'True' # Conversion en bool√©en
EMAIL_HOST_USER = config('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD')
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER

# üîë Auth backends
AUTHENTICATION_BACKENDS = [
    'accounts.backends.EmailBackend',  # login par email
    'django.contrib.auth.backends.ModelBackend',  # login classique
]

# üõí Config e-commerce
CART_SESSION_ID = 'cart'
MAX_PRODUCT_QUANTITY_PER_ORDER = config("MAX_PRODUCT_QUANTITY_PER_ORDER", default=20, cast=int)


LOGIN_URL = '/compte/connexion/'



# --- CONFIGURATION PERSONNALIS√âE ---
COMPANY_NAME = config('COMPANY_NAME')
COMPANY_ADDRESS = config('COMPANY_ADDRESS')
COMPANY_EMAIL = config('COMPANY_EMAIL')
COMPANY_PHONE_FIXE = config('COMPANY_PHONE_FIXE')
COMPANY_PHONE_MOBILE = config('COMPANY_PHONE_MOBILE')

SHOP_CURRENCY = config('SHOP_CURRENCY')

# Boutique
SHOP_CURRENCY = config('SHOP_CURRENCY', 'EUR')

from decimal import Decimal
SHOP_VAT_RATE = Decimal(config('SHOP_VAT_RATE', '20.0'))
PRODUCTS_PER_PAGE = int(config('PRODUCTS_PER_PAGE', 12))

GEMINI_API_KEY = config('GEMINI_API_KEY')